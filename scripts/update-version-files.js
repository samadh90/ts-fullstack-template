/**
 * This script updates version-dependent files after standard-version bumps the package.json version
 * It's called automatically during the release process
 */

const fs = require('fs');
const { execSync } = require('child_process');
const packageJson = require('../package.json');

const version = packageJson.version;
console.log('Updating files with version:', version);

try {
  // 1. Update README version badge
  const readmePath = './README.md';
  let readme = fs.readFileSync(readmePath, 'utf8');
  
  // Update version in badge
  readme = readme.replace(
    /!\[Version\]\(https:\/\/img\.shields\.io\/badge\/version-[0-9]+\.[0-9]+\.[0-9]+-blue\.svg\)/,
    `![Version](https://img.shields.io/badge/version-${version}-blue.svg)`
  );
  
  fs.writeFileSync(readmePath, readme);
  console.log('✓ Updated README badge');
  
  // 2. Update the version.ts file
  const versionFilePath = './client/src/version.ts';
  const versionContent = `// This file is automatically generated by the release process
// Do not modify manually

// Current version from package.json
export const version = '${version}';
export const versionDate = new Date().toISOString().split('T')[0];
`;
  fs.writeFileSync(versionFilePath, versionContent);
  console.log('✓ Updated version.ts file');
  
  // 3. Stage the changes to be included in the version commit
  execSync('git add README.md client/src/version.ts');
  console.log('✓ Staged changes to git');
  
} catch (error) {
  console.error('Error updating files:', error);
  process.exit(1);
}
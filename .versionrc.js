const fs = require('fs');

module.exports = {
  // Types that will appear in the changelog
  types: [
    { type: "feat", section: "Features" },
    { type: "fix", section: "Bug Fixes" },
    { type: "docs", section: "Documentation" },
    { type: "style", section: "Styling" },
    { type: "refactor", section: "Refactors" },
    { type: "perf", section: "Performance" },
    { type: "test", section: "Tests" },
    { type: "chore", hidden: true }
  ],
  // Files to be versioned
  bumpFiles: [
    {
      filename: 'package.json',
      type: 'json'
    }
  ],
  // Files containing the version number
  packageFiles: [
    {
      filename: 'package.json',
      type: 'json'
    }
  ],
  // Scripts to run during the versioning process
  scripts: {
    postbump: function(version) {
      // Update README version badge
      console.log('Updating README version badge to', version);
      try {
        const readmePath = './README.md';
        let readme = fs.readFileSync(readmePath, 'utf8');
        
        // Update version in badge
        readme = readme.replace(
          /!\[Version\]\(https:\/\/img\.shields\.io\/badge\/version-[0-9]+\.[0-9]+\.[0-9]+-blue\.svg\)/,
          `![Version](https://img.shields.io/badge/version-${version}-blue.svg)`
        );
        
        fs.writeFileSync(readmePath, readme);
        
        // Also update the version.ts file
        const versionFilePath = './client/src/version.ts';
        const versionContent = `// This file is automatically generated by the release process
// Do not modify manually

// Current version from package.json
export const version = '${version}';
export const versionDate = new Date().toISOString().split('T')[0];
`;
        fs.writeFileSync(versionFilePath, versionContent);
        
        // Stage the changes to be included in the version commit
        require('child_process').execSync('git add README.md client/src/version.ts');
        
        return true;
      } catch (error) {
        console.error('Error updating files:', error);
        return false;
      }
    }
  }
};
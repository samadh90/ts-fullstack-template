name: Version and Release

on:
  push:
    branches:
      - main
      - master

# Add permissions for the GitHub token
permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  version-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Run standard-version
        run: npx standard-version

      - name: Get version from package.json
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
      
      - name: Update README directly
        run: |
          version=${{ steps.package-version.outputs.current-version }}
          # Update README badge
          sed -i "s/version-[0-9]\+\.[0-9]\+\.[0-9]\+-blue/version-$version-blue/" README.md
          # Update version.ts
          echo "// This file is automatically generated by the release process
          // Do not modify manually

          // Current version from package.json
          export const version = '$version';
          export const versionDate = new Date().toISOString().split('T')[0];" > client/src/version.ts
          
          git add README.md client/src/version.ts
          git commit --amend --no-edit
          
      - name: Generate changelog
        run: npx conventional-changelog -p angular -i CHANGELOG.md -s

      - name: Push changes
        run: |
          git push --follow-tags origin HEAD --force
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.package-version.outputs.current-version }}
          name: Release v${{ steps.package-version.outputs.current-version }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}